(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["Button-docs-Button-basic-mdx"],{

/***/ "./node_modules/@mdx-js/react/dist/esm.js":
/*!************************************************!*\
  !*** ./node_modules/@mdx-js/react/dist/esm.js ***!
  \************************************************/
/*! exports provided: MDXContext, MDXProvider, mdx, useMDXComponents, withMDXComponents */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDXContext\", function() { return MDXContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDXProvider\", function() { return MDXProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mdx\", function() { return createElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useMDXComponents\", function() { return useMDXComponents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withMDXComponents\", function() { return withMDXComponents; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0___default.a.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = react__WEBPACK_IMPORTED_MODULE_0___default.a.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, createElementArgArray);\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, args);\n}\n\n\n\n\n//# sourceURL=webpack:///./node_modules/@mdx-js/react/dist/esm.js?");

/***/ }),

/***/ "./src/components/Button/docs/Button-basic.mdx":
/*!*****************************************************!*\
  !*** ./src/components/Button/docs/Button-basic.mdx ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ \"./node_modules/@babel/runtime/helpers/interopRequireWildcard.js\");\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nexports.__esModule = true;\nexports[\"default\"] = MDXContent;\nexports.col = exports.propsTables = exports.ButtonDisabled = exports.ButtonIcon = exports.ButtonMicro = exports.ButtonBlock = exports.LoadingButton = exports.ButtonGhost = exports.ButtonType = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutPropertiesLoose */ \"./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js\"));\n\nvar _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ \"./node_modules/@babel/runtime/helpers/extends.js\"));\n\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"react\"));\n\nvar _react2 = __webpack_require__(/*! @mdx-js/react */ \"./node_modules/@mdx-js/react/dist/esm.js\");\n\nvar _ui = __webpack_require__(/*! @webapp-suite/ui */ \"./src/components/index.tsx\");\n\nvar _Example = _interopRequireDefault(__webpack_require__(/*! widgets/Example */ \"./site/widgets/Example/index.js\"));\n\nvar _PropsTable = _interopRequireDefault(__webpack_require__(/*! widgets/PropsTable */ \"./site/widgets/PropsTable/index.js\"));\n\nvar _Markdown = _interopRequireDefault(__webpack_require__(/*! widgets/Markdown */ \"./site/widgets/Markdown/index.js\"));\n\n/* @jsx mdx */\nvar ButtonType = function ButtonType() {\n  return (0, _react2.mdx)(_react[\"default\"].Fragment, null, (0, _react2.mdx)(_ui.Button, {\n    mdxType: \"Button\"\n  }, \"DEFAULT\"), (0, _react2.mdx)(_ui.Button, {\n    type: \"primary\",\n    mdxType: \"Button\"\n  }, \"PRIMARY\"), (0, _react2.mdx)(_ui.Button, {\n    type: \"accept\",\n    mdxType: \"Button\"\n  }, \"ACCEPT\"), (0, _react2.mdx)(_ui.Button, {\n    type: \"warning\",\n    mdxType: \"Button\"\n  }, \"WARNING\"), (0, _react2.mdx)(_ui.Button, {\n    type: \"danger\",\n    mdxType: \"Button\"\n  }, \"DANGER\"), (0, _react2.mdx)(_ui.Button, {\n    type: \"text\",\n    mdxType: \"Button\"\n  }, \"TEXT\"), (0, _react2.mdx)(_ui.Button, {\n    type: \"link\",\n    mdxType: \"Button\"\n  }, \"LINK\"));\n};\n\nexports.ButtonType = ButtonType;\n\nvar ButtonGhost = function ButtonGhost() {\n  return (0, _react2.mdx)(_react[\"default\"].Fragment, null, (0, _react2.mdx)(_ui.Button, {\n    ghost: true,\n    mdxType: \"Button\"\n  }, \"DEFAULT\"), (0, _react2.mdx)(_ui.Button, {\n    ghost: true,\n    type: \"primary\",\n    mdxType: \"Button\"\n  }, \"PRIMARY\"), (0, _react2.mdx)(_ui.Button, {\n    ghost: true,\n    type: \"accept\",\n    mdxType: \"Button\"\n  }, \"ACCEPT\"), (0, _react2.mdx)(_ui.Button, {\n    ghost: true,\n    type: \"warning\",\n    mdxType: \"Button\"\n  }, \"WARNING\"), (0, _react2.mdx)(_ui.Button, {\n    ghost: true,\n    type: \"danger\",\n    mdxType: \"Button\"\n  }, \"DANGER\"), (0, _react2.mdx)(_ui.Button, {\n    ghost: true,\n    type: \"text\",\n    mdxType: \"Button\"\n  }, \"TEXT\"), (0, _react2.mdx)(_ui.Button, {\n    ghost: true,\n    type: \"link\",\n    mdxType: \"Button\"\n  }, \"LINK\"));\n};\n\nexports.ButtonGhost = ButtonGhost;\n\nvar LoadingButton = function LoadingButton() {\n  var _useState = (0, _react.useState)(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var handleClick = function handleClick() {\n    console.log('clicked!');\n    setLoading(true);\n    setTimeout(function () {\n      return setLoading(false);\n    }, 2000);\n  };\n\n  return (0, _react2.mdx)(_ui.Button, {\n    type: \"primary\",\n    loading: loading,\n    onClick: handleClick,\n    mdxType: \"Button\"\n  }, \"SHOW LOADING\");\n};\n\nexports.LoadingButton = LoadingButton;\n\nvar ButtonBlock = function ButtonBlock() {\n  return (0, _react2.mdx)(_react[\"default\"].Fragment, null, (0, _react2.mdx)(_ui.Button, {\n    type: \"primary\",\n    block: true,\n    mdxType: \"Button\"\n  }, \"PRIMARY\"), (0, _react2.mdx)(_ui.Button, {\n    block: true,\n    mdxType: \"Button\"\n  }, \"DEFAULT\"));\n};\n\nexports.ButtonBlock = ButtonBlock;\n\nvar ButtonMicro = function ButtonMicro() {\n  return (0, _react2.mdx)(_react[\"default\"].Fragment, null, (0, _react2.mdx)(_ui.Button, {\n    type: \"primary\",\n    size: \"sm\",\n    mdxType: \"Button\"\n  }, \"PRIMARY\"), (0, _react2.mdx)(_ui.Button, {\n    size: \"sm\",\n    mdxType: \"Button\"\n  }, \"DEFAULT\"), (0, _react2.mdx)(\"br\", null), (0, _react2.mdx)(\"br\", null), (0, _react2.mdx)(_ui.Button, {\n    type: \"primary\",\n    size: \"md\",\n    mdxType: \"Button\"\n  }, \"PRIMARY\"), (0, _react2.mdx)(_ui.Button, {\n    size: \"md\",\n    mdxType: \"Button\"\n  }, \"DEFAULT\"), (0, _react2.mdx)(\"br\", null), (0, _react2.mdx)(\"br\", null), (0, _react2.mdx)(_ui.Button, {\n    type: \"primary\",\n    size: \"lg\",\n    mdxType: \"Button\"\n  }, \"PRIMARY\"), (0, _react2.mdx)(_ui.Button, {\n    size: \"lg\",\n    mdxType: \"Button\"\n  }, \"DEFAULT\"));\n};\n\nexports.ButtonMicro = ButtonMicro;\n\nvar ButtonIcon = function ButtonIcon() {\n  return (0, _react2.mdx)(_react[\"default\"].Fragment, null, (0, _react2.mdx)(_ui.Button, {\n    icon: \"statuschange\",\n    type: \"primary\",\n    mdxType: \"Button\"\n  }), (0, _react2.mdx)(_ui.Button, {\n    icon: \"statuschange\",\n    type: \"primary\",\n    ghost: true,\n    mdxType: \"Button\"\n  }), (0, _react2.mdx)(_ui.Button, {\n    icon: \"statuschange\",\n    mdxType: \"Button\"\n  }), (0, _react2.mdx)(_ui.Button, {\n    icon: \"add\",\n    mdxType: \"Button\"\n  }), (0, _react2.mdx)(_ui.Button, {\n    icon: \"statuschange\",\n    size: \"sm\",\n    mdxType: \"Button\"\n  }), (0, _react2.mdx)(_ui.Button, {\n    icon: \"statuschange\",\n    ghost: true,\n    mdxType: \"Button\"\n  }), (0, _react2.mdx)(_ui.Button, {\n    icon: \"activity\",\n    mdxType: \"Button\"\n  }, \"DATA ANALYSIS\"), (0, _react2.mdx)(_ui.Button, {\n    icon: \"statuschange\",\n    type: \"text\",\n    mdxType: \"Button\"\n  }, \"Refresh\"));\n};\n\nexports.ButtonIcon = ButtonIcon;\n\nvar ButtonDisabled = function ButtonDisabled() {\n  return (0, _react2.mdx)(_react[\"default\"].Fragment, null, (0, _react2.mdx)(_ui.Button, {\n    disabled: true,\n    type: \"primary\",\n    mdxType: \"Button\"\n  }, \"PRIMARY\"), (0, _react2.mdx)(_ui.Button, {\n    disabled: true,\n    mdxType: \"Button\"\n  }, \"DEFAULT\"), (0, _react2.mdx)(_ui.Button, {\n    disabled: true,\n    type: \"accept\",\n    mdxType: \"Button\"\n  }, \"ACCEPT\"), (0, _react2.mdx)(_ui.Button, {\n    disabled: true,\n    type: \"text\",\n    mdxType: \"Button\"\n  }, \"TEXT\"), (0, _react2.mdx)(_ui.Button, {\n    disabled: true,\n    type: \"link\",\n    mdxType: \"Button\"\n  }, \"LINK\"), (0, _react2.mdx)(\"br\", null), (0, _react2.mdx)(\"br\", null), (0, _react2.mdx)(_ui.Button, {\n    icon: \"statuschange\",\n    disabled: true,\n    mdxType: \"Button\"\n  }), (0, _react2.mdx)(_ui.Button, {\n    icon: \"activity\",\n    type: \"primary\",\n    ghost: true,\n    disabled: true,\n    mdxType: \"Button\"\n  }, \"DATA ANALYSIS\"));\n};\n\nexports.ButtonDisabled = ButtonDisabled;\nvar propsTables = [{\n  \"name\": \"Button\",\n  \"props\": [{\n    \"name\": \"type\",\n    \"type\": \"'primary' | 'accept' | 'warning' | 'danger' | 'link' | 'text'\",\n    \"required\": false,\n    \"description\": \"<p>button type which is not original html <code>type</code> of <code>button</code></p>\\n\"\n  }, {\n    \"name\": \"size\",\n    \"type\": \"'sm' | 'md' | 'lg'\",\n    \"required\": false,\n    \"description\": \"<p>button size</p>\\n\",\n    \"default\": \"'md'\"\n  }, {\n    \"name\": \"ghost\",\n    \"type\": \"bool\",\n    \"required\": false,\n    \"description\": \"<p>determine whether it&#39;s a ghost button</p>\\n\"\n  }, {\n    \"name\": \"block\",\n    \"type\": \"bool\",\n    \"required\": false,\n    \"description\": \"<p>determine whether it&#39;s a block button</p>\\n\"\n  }, {\n    \"name\": \"loading\",\n    \"type\": \"bool\",\n    \"required\": false,\n    \"description\": \"<p>determine whether it&#39;s loading</p>\\n\"\n  }, {\n    \"name\": \"disabled\",\n    \"type\": \"bool\",\n    \"required\": false,\n    \"description\": \"<p>disable the button</p>\\n\"\n  }, {\n    \"name\": \"icon\",\n    \"type\": \"string\",\n    \"required\": false,\n    \"description\": \"<p>icon type name</p>\\n\"\n  }, {\n    \"name\": \"htmlType\",\n    \"type\": \"'button' | 'submit' | 'reset'\",\n    \"required\": false,\n    \"description\": \"<p>set the original html <code>type</code> of <code>button</code>, see: <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-type\\\">MDN</a></p>\\n\",\n    \"default\": \"'button'\"\n  }]\n}];\nexports.propsTables = propsTables;\nvar col = 16;\nexports.col = col;\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return (0, _react2.mdx)(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  ButtonType: ButtonType,\n  ButtonGhost: ButtonGhost,\n  LoadingButton: LoadingButton,\n  ButtonBlock: ButtonBlock,\n  ButtonMicro: ButtonMicro,\n  ButtonIcon: ButtonIcon,\n  ButtonDisabled: ButtonDisabled,\n  propsTables: propsTables,\n  col: col\n};\n\nvar MDXLayout = function MDXLayout(_ref) {\n  var props = (0, _extends2[\"default\"])({}, _ref);\n  return (0, _react2.mdx)(\"div\", null, (0, _react2.mdx)(_ui.Row, null, (0, _react2.mdx)(_ui.Col, {\n    col: \"md-16\"\n  }, (0, _react2.mdx)(\"div\", {\n    className: \"markdown\"\n  }, props.children))), propsTables.length > 0 && (0, _react2.mdx)(_ui.Row, null, (0, _react2.mdx)(_ui.Col, {\n    col: \"md-16\"\n  }, propsTables.map(function (pt) {\n    return (0, _react2.mdx)(_PropsTable[\"default\"], (0, _extends2[\"default\"])({\n      key: pt.name\n    }, pt));\n  }))));\n};\n\nfunction MDXContent(_ref2) {\n  var components = _ref2.components,\n      props = (0, _objectWithoutPropertiesLoose2[\"default\"])(_ref2, [\"components\"]);\n  return (0, _react2.mdx)(MDXLayout, (0, _extends2[\"default\"])({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), (0, _react2.mdx)(\"h2\", null, \"Type\"), (0, _react2.mdx)(\"p\", null, \"The \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"default\"), \" and \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"primary\"), \" buttons are used in most cases, you can also use other types in specific scenarios.\"), (0, _react2.mdx)(_Example[\"default\"], {\n    renderModel: \"tabs\",\n    code: \"import { Button } from '@webapp-suite/ui'\\n\\nconst ButtonType = () => {\\n  return (\\n    <>\\n      <Button>DEFAULT</Button>\\n      <Button type=\\\"primary\\\">PRIMARY</Button>\\n      <Button type=\\\"accept\\\">ACCEPT</Button>\\n      <Button type=\\\"warning\\\">WARNING</Button>\\n      <Button type=\\\"danger\\\">DANGER</Button>\\n      <Button type=\\\"text\\\">TEXT</Button>\\n      <Button type=\\\"link\\\">LINK</Button>\\n    </>\\n  )\\n}\",\n    mdxType: \"Example\"\n  }, (0, _react2.mdx)(ButtonType, {\n    mdxType: \"ButtonType\"\n  })), (0, _react2.mdx)(\"h2\", null, \"Ghost\"), (0, _react2.mdx)(\"p\", null, \"The \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ghost\"), \" style button is commonly used in the place where you don't want the button to stand out.\"), (0, _react2.mdx)(_Example[\"default\"], {\n    renderModel: \"tabs\",\n    code: \"import { Button } from '@webapp-suite/ui'\\n\\nconst ButtonGhost = () => {\\n  return (\\n    <>\\n      <Button ghost>DEFAULT</Button>\\n      <Button ghost type=\\\"primary\\\">PRIMARY</Button>\\n      <Button ghost type=\\\"accept\\\">ACCEPT</Button>\\n      <Button ghost type=\\\"warning\\\">WARNING</Button>\\n      <Button ghost type=\\\"danger\\\">DANGER</Button>\\n      <Button ghost type=\\\"text\\\">TEXT</Button>\\n      <Button ghost type=\\\"link\\\">LINK</Button>\\n    </>\\n  )\\n}\",\n    mdxType: \"Example\"\n  }, (0, _react2.mdx)(ButtonGhost, {\n    mdxType: \"ButtonGhost\"\n  })), (0, _react2.mdx)(\"h2\", null, \"Loading Button\"), (0, _react2.mdx)(\"p\", null, \"Assign the \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"loading\"), \" property to Button to initialize a spinner. Click event will be disabled when button is loading state, open the browser console you will see more logs.\"), (0, _react2.mdx)(_Example[\"default\"], {\n    renderModel: \"tabs\",\n    code: \"import { Button } from '@webapp-suite/ui'\\nimport { useState } from 'react'\\n\\nconst LoadingButton = () => {\\n  const [loading, setLoading] = useState(false)\\n  const handleClick = () => {\\n    console.log('clicked!')\\n    setLoading(true)\\n    setTimeout(() => setLoading(false), 2000)\\n  }\\n  return <Button type=\\\"primary\\\" loading={loading} onClick={handleClick}>SHOW LOADING</Button>\\n}\",\n    mdxType: \"Example\"\n  }, (0, _react2.mdx)(LoadingButton, {\n    mdxType: \"LoadingButton\"\n  })), (0, _react2.mdx)(\"h2\", null, \"Block Button\"), (0, _react2.mdx)(\"p\", null, \"The \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"block\"), \" property will make the button fit to its parent width.\"), (0, _react2.mdx)(_Example[\"default\"], {\n    renderModel: \"tabs\",\n    code: \"import { Button } from '@webapp-suite/ui'\\n\\nconst ButtonBlock = () => {\\n  return (\\n    <>\\n      <Button type=\\\"primary\\\" block>PRIMARY</Button>\\n      <Button block>DEFAULT</Button>\\n    </>\\n  )\\n}\",\n    mdxType: \"Example\"\n  }, (0, _react2.mdx)(ButtonBlock, {\n    mdxType: \"ButtonBlock\"\n  })), (0, _react2.mdx)(\"h2\", null, \"Size\"), (0, _react2.mdx)(\"p\", null, \"Besides default \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"md\"), \" size, Button component provides three additional sizes for you to choose among different scenarios.\"), (0, _react2.mdx)(_Example[\"default\"], {\n    renderModel: \"tabs\",\n    code: \"import { Button } from '@webapp-suite/ui'\\n\\nconst ButtonMicro = () => {\\n  return (\\n    <>\\n      <Button type=\\\"primary\\\" size=\\\"sm\\\">PRIMARY</Button>\\n      <Button size=\\\"sm\\\">DEFAULT</Button>\\n      <br/><br/>\\n      <Button type=\\\"primary\\\" size=\\\"md\\\">PRIMARY</Button>\\n      <Button size=\\\"md\\\">DEFAULT</Button>\\n      <br/><br/>\\n      <Button type=\\\"primary\\\" size=\\\"lg\\\">PRIMARY</Button>\\n      <Button size=\\\"lg\\\">DEFAULT</Button>\\n    </>\\n  )\\n}\",\n    mdxType: \"Example\"\n  }, (0, _react2.mdx)(ButtonMicro, {\n    mdxType: \"ButtonMicro\"\n  })), (0, _react2.mdx)(\"h2\", null, \"Icon\"), (0, _react2.mdx)(\"p\", null, \"Use icons to add more meaning to Button. You can use icon alone to save some space, or use it with text.\"), (0, _react2.mdx)(_Example[\"default\"], {\n    renderModel: \"tabs\",\n    code: \"import { Button } from '@webapp-suite/ui'\\n\\nconst ButtonIcon = () => {\\n  return (\\n    <>\\n      <Button icon=\\\"statuschange\\\" type=\\\"primary\\\" />\\n      <Button icon=\\\"statuschange\\\" type=\\\"primary\\\" ghost />\\n      <Button icon=\\\"statuschange\\\" />\\n      <Button icon=\\\"add\\\" />\\n      <Button icon=\\\"statuschange\\\" size=\\\"sm\\\" />\\n      <Button icon=\\\"statuschange\\\" ghost />\\n      <Button icon=\\\"activity\\\">DATA ANALYSIS</Button>\\n      <Button icon=\\\"statuschange\\\" type=\\\"text\\\">Refresh</Button>\\n    </>\\n  )\\n}\",\n    mdxType: \"Example\"\n  }, (0, _react2.mdx)(ButtonIcon, {\n    mdxType: \"ButtonIcon\"\n  })), (0, _react2.mdx)(\"h2\", null, \"Disabled\"), (0, _react2.mdx)(\"p\", null, \"The \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"disabled\"), \" attribute determines if the button is disabled.\"), (0, _react2.mdx)(_Example[\"default\"], {\n    renderModel: \"tabs\",\n    code: \"import { Button } from '@webapp-suite/ui'\\n\\nconst ButtonDisabled = () => {\\n  return (\\n    <>\\n      <Button disabled type=\\\"primary\\\">PRIMARY</Button>\\n      <Button disabled>DEFAULT</Button>\\n      <Button disabled type=\\\"accept\\\">ACCEPT</Button>\\n      <Button disabled type=\\\"text\\\">TEXT</Button>\\n      <Button disabled type=\\\"link\\\">LINK</Button>\\n      <br/><br/>\\n      <Button icon=\\\"statuschange\\\" disabled />\\n      <Button icon=\\\"activity\\\" type=\\\"primary\\\" ghost disabled>DATA ANALYSIS</Button>\\n    </>\\n  )\\n}\",\n    mdxType: \"Example\"\n  }, (0, _react2.mdx)(ButtonDisabled, {\n    mdxType: \"ButtonDisabled\"\n  })));\n}\n\n;\nMDXContent.isMDXComponent = true;\n\n//# sourceURL=webpack:///./src/components/Button/docs/Button-basic.mdx?");

/***/ })

}]);