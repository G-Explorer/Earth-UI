(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["Checkbox-docs-Checkbox-mdx"],{

/***/ "./node_modules/@mdx-js/react/dist/esm.js":
/*!************************************************!*\
  !*** ./node_modules/@mdx-js/react/dist/esm.js ***!
  \************************************************/
/*! exports provided: MDXContext, MDXProvider, mdx, useMDXComponents, withMDXComponents */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDXContext\", function() { return MDXContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDXProvider\", function() { return MDXProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mdx\", function() { return createElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useMDXComponents\", function() { return useMDXComponents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withMDXComponents\", function() { return withMDXComponents; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0___default.a.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = react__WEBPACK_IMPORTED_MODULE_0___default.a.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, createElementArgArray);\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, args);\n}\n\n\n\n\n//# sourceURL=webpack:///./node_modules/@mdx-js/react/dist/esm.js?");

/***/ }),

/***/ "./src/components/Checkbox/docs/Checkbox.mdx":
/*!***************************************************!*\
  !*** ./src/components/Checkbox/docs/Checkbox.mdx ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nexports.__esModule = true;\nexports[\"default\"] = MDXContent;\nexports.col = exports.propsTables = exports.CheckboxGroupControlled = exports.CheckboxGroupHorizontal = exports.CheckboxGroupVertical = exports.CheckboxIndeterminate = exports.InputRD = exports.InputNormal = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutPropertiesLoose */ \"./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js\"));\n\nvar _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ \"./node_modules/@babel/runtime/helpers/extends.js\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ \"./node_modules/@babel/runtime/helpers/assertThisInitialized.js\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inheritsLoose */ \"./node_modules/@babel/runtime/helpers/inheritsLoose.js\"));\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"react\"));\n\nvar _react2 = __webpack_require__(/*! @mdx-js/react */ \"./node_modules/@mdx-js/react/dist/esm.js\");\n\nvar _ui = __webpack_require__(/*! @webapp-suite/ui */ \"./src/components/index.tsx\");\n\nvar _Example = _interopRequireDefault(__webpack_require__(/*! widgets/Example */ \"./site/widgets/Example/index.js\"));\n\nvar _PropsTable = _interopRequireDefault(__webpack_require__(/*! widgets/PropsTable */ \"./site/widgets/PropsTable/index.js\"));\n\nvar _Markdown = _interopRequireDefault(__webpack_require__(/*! widgets/Markdown */ \"./site/widgets/Markdown/index.js\"));\n\n/* @jsx mdx */\nvar InputNormal = function InputNormal() {\n  return (0, _react2.mdx)(\"div\", null, (0, _react2.mdx)(_ui.Checkbox, {\n    mdxType: \"Checkbox\"\n  }, \" Default\"), (0, _react2.mdx)(_ui.Checkbox, {\n    defaultChecked: true,\n    mdxType: \"Checkbox\"\n  }, \" Checked\"));\n};\n\nexports.InputNormal = InputNormal;\n\nvar InputRD = function InputRD() {\n  return (0, _react2.mdx)(\"div\", null, (0, _react2.mdx)(_ui.Checkbox, {\n    disabled: true,\n    mdxType: \"Checkbox\"\n  }, \" Default\"), (0, _react2.mdx)(_ui.Checkbox, {\n    defaultChecked: true,\n    disabled: true,\n    mdxType: \"Checkbox\"\n  }, ' ', \"Checked\"));\n};\n\nexports.InputRD = InputRD;\n\nvar CheckboxIndeterminate = /*#__PURE__*/function (_React$Component) {\n  (0, _inheritsLoose2[\"default\"])(CheckboxIndeterminate, _React$Component);\n\n  function CheckboxIndeterminate(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.options = ['A', 'B', 'C', 'D'];\n    _this.state = {\n      indeterminate: true,\n      checkAll: false,\n      value: ['A', 'C']\n    };\n    _this.handleCheckAll = _this.handleCheckAll.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    _this.handleChange = _this.handleChange.bind((0, _assertThisInitialized2[\"default\"])(_this));\n    return _this;\n  }\n\n  var _proto = CheckboxIndeterminate.prototype;\n\n  _proto.handleCheckAll = function handleCheckAll(value, checked) {\n    var nextValue = checked ? this.options : [];\n    console.log(nextValue, 'handleCheckAll');\n    this.setState({\n      value: nextValue,\n      indeterminate: false,\n      checkAll: checked\n    });\n  };\n\n  _proto.handleChange = function handleChange(value) {\n    console.log(value, 'handleChange');\n    this.setState({\n      value: value,\n      indeterminate: value.length > 0 && value.length < this.options.length,\n      checkAll: value.length === this.options.length\n    });\n  };\n\n  _proto.render = function render() {\n    return (0, _react2.mdx)(\"div\", null, (0, _react2.mdx)(_ui.Checkbox, {\n      indeterminate: this.state.indeterminate,\n      checked: this.state.checkAll,\n      onChange: this.handleCheckAll,\n      mdxType: \"Checkbox\"\n    }, \"Check all\"), (0, _react2.mdx)(\"hr\", null), (0, _react2.mdx)(_ui.CheckboxGroup, {\n      inline: true,\n      name: \"checkboxList\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      mdxType: \"CheckboxGroup\"\n    }, (0, _react2.mdx)(_ui.Checkbox, {\n      value: \"A\",\n      mdxType: \"Checkbox\"\n    }, \"Item A\"), (0, _react2.mdx)(_ui.Checkbox, {\n      value: \"B\",\n      mdxType: \"Checkbox\"\n    }, \"Item B\"), (0, _react2.mdx)(_ui.Checkbox, {\n      value: \"C\",\n      mdxType: \"Checkbox\"\n    }, \"Item C\"), (0, _react2.mdx)(_ui.Checkbox, {\n      value: \"D\",\n      mdxType: \"Checkbox\"\n    }, \"Item D\")));\n  };\n\n  return CheckboxIndeterminate;\n}(_react[\"default\"].Component);\n\nexports.CheckboxIndeterminate = CheckboxIndeterminate;\n\nvar CheckboxGroupVertical = function CheckboxGroupVertical() {\n  return (0, _react2.mdx)(_ui.CheckboxGroup, {\n    name: \"checkboxList\",\n    mdxType: \"CheckboxGroup\"\n  }, (0, _react2.mdx)(\"p\", null, \"Group1\"), (0, _react2.mdx)(_ui.Checkbox, {\n    mdxType: \"Checkbox\"\n  }, \"Item A\"), (0, _react2.mdx)(_ui.Checkbox, {\n    mdxType: \"Checkbox\"\n  }, \"Item B\"), (0, _react2.mdx)(\"p\", null, \"Group2\"), (0, _react2.mdx)(_ui.Checkbox, {\n    mdxType: \"Checkbox\"\n  }, \"Item C\"), (0, _react2.mdx)(_ui.Checkbox, {\n    disabled: true,\n    mdxType: \"Checkbox\"\n  }, \"Item D\"));\n};\n\nexports.CheckboxGroupVertical = CheckboxGroupVertical;\n\nvar CheckboxGroupHorizontal = function CheckboxGroupHorizontal() {\n  return (0, _react2.mdx)(_ui.CheckboxGroup, {\n    inline: true,\n    name: \"checkboxList\",\n    mdxType: \"CheckboxGroup\"\n  }, (0, _react2.mdx)(_ui.Checkbox, {\n    mdxType: \"Checkbox\"\n  }, \"Item A\"), (0, _react2.mdx)(_ui.Checkbox, {\n    mdxType: \"Checkbox\"\n  }, \"Item B\"), (0, _react2.mdx)(_ui.Checkbox, {\n    mdxType: \"Checkbox\"\n  }, \"Item C\"), (0, _react2.mdx)(_ui.Checkbox, {\n    disabled: true,\n    mdxType: \"Checkbox\"\n  }, \"Item D\"));\n};\n\nexports.CheckboxGroupHorizontal = CheckboxGroupHorizontal;\n\nvar CheckboxGroupControlled = /*#__PURE__*/function (_React$Component2) {\n  (0, _inheritsLoose2[\"default\"])(CheckboxGroupControlled, _React$Component2);\n\n  function CheckboxGroupControlled(props) {\n    var _this2;\n\n    _this2 = _React$Component2.call(this, props) || this;\n    _this2.state = {\n      value: ['A', 'C']\n    };\n    return _this2;\n  }\n\n  var _proto2 = CheckboxGroupControlled.prototype;\n\n  _proto2.render = function render() {\n    var _this3 = this;\n\n    return (0, _react2.mdx)(_ui.CheckboxGroup, {\n      inline: true,\n      name: \"checkboxList\",\n      value: this.state.value,\n      onChange: function onChange(value) {\n        console.log(value, 'onChange');\n\n        _this3.setState({\n          value: value\n        });\n      },\n      mdxType: \"CheckboxGroup\"\n    }, (0, _react2.mdx)(_ui.Checkbox, {\n      value: \"A\",\n      mdxType: \"Checkbox\"\n    }, \"Item A\"), (0, _react2.mdx)(_ui.Checkbox, {\n      value: \"B\",\n      mdxType: \"Checkbox\"\n    }, \"Item B\"), (0, _react2.mdx)(_ui.Checkbox, {\n      value: \"C\",\n      mdxType: \"Checkbox\"\n    }, \"Item C\"), (0, _react2.mdx)(_ui.Checkbox, {\n      value: \"D\",\n      disabled: true,\n      mdxType: \"Checkbox\"\n    }, \"Item D\"));\n  };\n\n  return CheckboxGroupControlled;\n}(_react[\"default\"].Component);\n\nexports.CheckboxGroupControlled = CheckboxGroupControlled;\nvar propsTables = [{\n  \"name\": \"Checkbox\",\n  \"props\": [{\n    \"name\": \"title\",\n    \"type\": \"string\",\n    \"required\": false,\n    \"description\": \"<p>HTML title</p>\\n\"\n  }, {\n    \"name\": \"inline\",\n    \"type\": \"boolean\",\n    \"required\": false,\n    \"description\": \"<p>Inline layout</p>\\n\"\n  }, {\n    \"name\": \"disabled\",\n    \"type\": \"boolean\",\n    \"required\": false,\n    \"description\": \"<p>A checkbox can appear disabled and be unable to change states</p>\\n\"\n  }, {\n    \"name\": \"checked\",\n    \"type\": \"boolean\",\n    \"required\": false,\n    \"description\": \"<p>Whether or not checkbox is checked.</p>\\n\"\n  }, {\n    \"name\": \"defaultChecked\",\n    \"type\": \"boolean\",\n    \"required\": false,\n    \"description\": \"<p>The initial value of checked.</p>\\n\"\n  }, {\n    \"name\": \"indeterminate\",\n    \"type\": \"boolean\",\n    \"required\": false,\n    \"description\": \"<p>Whether or not checkbox is indeterminate.</p>\\n\"\n  }, {\n    \"name\": \"onChange\",\n    \"type\": \"signature\",\n    \"required\": false,\n    \"description\": \"<p>Called when the user attempts to change the checked state.</p>\\n\"\n  }, {\n    \"name\": \"onClick\",\n    \"type\": \"signature\",\n    \"required\": false,\n    \"description\": \"<p>Called when the checkbox or label is clicked.</p>\\n\"\n  }, {\n    \"name\": \"inputRef\",\n    \"type\": \"ReactRef\",\n    \"required\": false,\n    \"description\": \"<p>Ref of input element</p>\\n\"\n  }, {\n    \"name\": \"value\",\n    \"type\": \"V\",\n    \"required\": false,\n    \"description\": \"<p>The HTML input value.</p>\\n\"\n  }, {\n    \"name\": \"tabIndex\",\n    \"type\": \"number\",\n    \"required\": false,\n    \"description\": \"<p>A checkbox can receive focus.</p>\\n\",\n    \"default\": \"0\"\n  }, {\n    \"name\": \"checkable\",\n    \"type\": \"boolean\",\n    \"required\": false,\n    \"description\": \"\",\n    \"default\": \"true\"\n  }, {\n    \"name\": \"onCheckboxClick\",\n    \"type\": \"signature\",\n    \"required\": false,\n    \"description\": \"\"\n  }]\n}, {\n  \"name\": \"CheckboxGroup\",\n  \"props\": [{\n    \"name\": \"name\",\n    \"type\": \"string\",\n    \"required\": false,\n    \"description\": \"<p>Used for the name of the form</p>\\n\"\n  }, {\n    \"name\": \"inline\",\n    \"type\": \"boolean\",\n    \"required\": false,\n    \"description\": \"<p>Inline layout</p>\\n\"\n  }]\n}];\nexports.propsTables = propsTables;\nvar col = 16;\nexports.col = col;\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return (0, _react2.mdx)(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  InputNormal: InputNormal,\n  InputRD: InputRD,\n  CheckboxIndeterminate: CheckboxIndeterminate,\n  CheckboxGroupVertical: CheckboxGroupVertical,\n  CheckboxGroupHorizontal: CheckboxGroupHorizontal,\n  CheckboxGroupControlled: CheckboxGroupControlled,\n  propsTables: propsTables,\n  col: col\n};\n\nvar MDXLayout = function MDXLayout(_ref) {\n  var props = (0, _extends2[\"default\"])({}, _ref);\n  return (0, _react2.mdx)(\"div\", null, (0, _react2.mdx)(_ui.Row, null, (0, _react2.mdx)(_ui.Col, {\n    col: \"md-16\"\n  }, (0, _react2.mdx)(\"div\", {\n    className: \"markdown\"\n  }, props.children))), propsTables.length > 0 && (0, _react2.mdx)(_ui.Row, null, (0, _react2.mdx)(_ui.Col, {\n    col: \"md-16\"\n  }, propsTables.map(function (pt) {\n    return (0, _react2.mdx)(_PropsTable[\"default\"], (0, _extends2[\"default\"])({\n      key: pt.name\n    }, pt));\n  }))));\n};\n\nfunction MDXContent(_ref2) {\n  var components = _ref2.components,\n      props = (0, _objectWithoutPropertiesLoose2[\"default\"])(_ref2, [\"components\"]);\n  return (0, _react2.mdx)(MDXLayout, (0, _extends2[\"default\"])({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), (0, _react2.mdx)(\"p\", null, \"Commonly used checkboxes\"), (0, _react2.mdx)(\"ul\", null, (0, _react2.mdx)(\"li\", {\n    parentName: \"ul\"\n  }, (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<Checkbox>\")), (0, _react2.mdx)(\"li\", {\n    parentName: \"ul\"\n  }, (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<CheckboxGroup>\"))), (0, _react2.mdx)(\"h2\", null, \"Default\"), (0, _react2.mdx)(\"p\", null, \"The Input default width is \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"100%\"), \", you can use \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"with\"), \" property to customize input (px) or use the layout components: \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Row\"), \", \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Col\"), \".\"), (0, _react2.mdx)(_Example[\"default\"], {\n    renderModel: \"tabs\",\n    code: \"import { Checkbox } from '@webapp-suite/ui'\\n\\nconst InputNormal = () => {\\n  return (\\n    <div>\\n        <Checkbox> Default</Checkbox>\\n        <Checkbox defaultChecked> Checked</Checkbox>\\n    </div>\\n  )\\n}\",\n    mdxType: \"Example\"\n  }, (0, _react2.mdx)(InputNormal, {\n    mdxType: \"InputNormal\"\n  })), (0, _react2.mdx)(\"h2\", null, \"Readonly / Disabled\"), (0, _react2.mdx)(\"p\", null, \"Disable the Input with the \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"disabled\"), \" attribute, but you can also choose \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"readonly\"), \" style for a better experience.\"), (0, _react2.mdx)(_Example[\"default\"], {\n    renderModel: \"tabs\",\n    code: \"import { Checkbox } from '@webapp-suite/ui'\\n\\nconst InputRD = () => {\\n  return (\\n    <div>\\n        <Checkbox disabled> Default</Checkbox>\\n        <Checkbox defaultChecked disabled>\\n          {' '}\\n          Checked\\n        </Checkbox>\\n    </div>\\n  )\\n}\",\n    mdxType: \"Example\"\n  }, (0, _react2.mdx)(InputRD, {\n    mdxType: \"InputRD\"\n  })), (0, _react2.mdx)(\"h2\", null, \"Indeterminate State\"), (0, _react2.mdx)(\"p\", null, \"the \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"indeterminate\"), \" property is mainly used on the select all or tree structure checkbox.\"), (0, _react2.mdx)(_Example[\"default\"], {\n    renderModel: \"tabs\",\n    code: \"import { Checkbox, CheckboxGroup } from '@webapp-suite/ui'\\n\\nclass CheckboxIndeterminate extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.options = ['A', 'B', 'C', 'D'];\\n    this.state = {\\n      indeterminate: true,\\n      checkAll: false,\\n      value: ['A', 'C']\\n    };\\n    this.handleCheckAll = this.handleCheckAll.bind(this);\\n    this.handleChange = this.handleChange.bind(this);\\n  }\\n  handleCheckAll(value, checked) {\\n    const nextValue = checked ? this.options : [];\\n    console.log(nextValue, 'handleCheckAll');\\n    this.setState({\\n      value: nextValue,\\n      indeterminate: false,\\n      checkAll: checked\\n    });\\n  }\\n  handleChange(value) {\\n    console.log(value, 'handleChange');\\n    this.setState({\\n      value,\\n      indeterminate: value.length > 0 && value.length < this.options.length,\\n      checkAll: value.length === this.options.length\\n    });\\n  }\\n  render() {\\n    return (\\n      <div>\\n        <Checkbox\\n          indeterminate={this.state.indeterminate}\\n          checked={this.state.checkAll}\\n          onChange={this.handleCheckAll}\\n        >\\n          Check all\\n        </Checkbox>\\n        <hr />\\n        <CheckboxGroup\\n          inline\\n          name=\\\"checkboxList\\\"\\n          value={this.state.value}\\n          onChange={this.handleChange}\\n        >\\n          <Checkbox value=\\\"A\\\">Item A</Checkbox>\\n          <Checkbox value=\\\"B\\\">Item B</Checkbox>\\n          <Checkbox value=\\\"C\\\">Item C</Checkbox>\\n          <Checkbox value=\\\"D\\\">Item D</Checkbox>\\n        </CheckboxGroup>\\n      </div>\\n    );\\n  }\\n}\",\n    mdxType: \"Example\"\n  }, (0, _react2.mdx)(CheckboxIndeterminate, {\n    mdxType: \"CheckboxIndeterminate\"\n  })), (0, _react2.mdx)(\"h2\", null, \"Checkbox Group\"), (0, _react2.mdx)(\"h3\", null, \"Vertical Layout\"), (0, _react2.mdx)(\"p\", null, \"Add \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size\"), \" attribute to change the size of Input. In addition to the default \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"md\"), \" size, there are three other options: \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sm\"), \" (30px), \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"md\"), \" (35px) and \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lg\"), \" (40px).\"), (0, _react2.mdx)(_Example[\"default\"], {\n    renderModel: \"tabs\",\n    code: \"import { Checkbox, CheckboxGroup } from '@webapp-suite/ui'\\n\\nconst CheckboxGroupVertical = () => (\\n  <CheckboxGroup name=\\\"checkboxList\\\">\\n    <p>Group1</p>\\n    <Checkbox>Item A</Checkbox>\\n    <Checkbox>Item B</Checkbox>\\n    <p>Group2</p>\\n    <Checkbox>Item C</Checkbox>\\n    <Checkbox disabled>Item D</Checkbox>\\n  </CheckboxGroup>\\n);\",\n    mdxType: \"Example\"\n  }, (0, _react2.mdx)(CheckboxGroupVertical, {\n    mdxType: \"CheckboxGroupVertical\"\n  })), (0, _react2.mdx)(\"h3\", null, \"Horizontal Layout\"), (0, _react2.mdx)(\"p\", null, \"Triggers when the Input is cleared by clicking the clear button\"), (0, _react2.mdx)(_Example[\"default\"], {\n    renderModel: \"tabs\",\n    code: \"import { Checkbox, CheckboxGroup } from '@webapp-suite/ui'\\n\\nconst CheckboxGroupHorizontal = () => (\\n  <CheckboxGroup inline name=\\\"checkboxList\\\">\\n    <Checkbox>Item A</Checkbox>\\n    <Checkbox>Item B</Checkbox>\\n    <Checkbox>Item C</Checkbox>\\n    <Checkbox disabled>Item D</Checkbox>\\n  </CheckboxGroup>\\n)\",\n    mdxType: \"Example\"\n  }, (0, _react2.mdx)(CheckboxGroupHorizontal, {\n    mdxType: \"CheckboxGroupHorizontal\"\n  })), (0, _react2.mdx)(\"h3\", null, \"Controlled\"), (0, _react2.mdx)(\"p\", null, \"Triggers when the Input is cleared by clicking the clear button\"), (0, _react2.mdx)(_Example[\"default\"], {\n    renderModel: \"tabs\",\n    code: \"import { Checkbox, CheckboxGroup } from '@webapp-suite/ui'\\n\\nclass CheckboxGroupControlled extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      value: ['A', 'C']\\n    };\\n  }\\n  render() {\\n    return (\\n      <CheckboxGroup\\n        inline\\n        name=\\\"checkboxList\\\"\\n        value={this.state.value}\\n        onChange={value => {\\n          console.log(value, 'onChange');\\n          this.setState({ value });\\n        }}\\n      >\\n        <Checkbox value=\\\"A\\\">Item A</Checkbox>\\n        <Checkbox value=\\\"B\\\">Item B</Checkbox>\\n        <Checkbox value=\\\"C\\\">Item C</Checkbox>\\n        <Checkbox value=\\\"D\\\" disabled>\\n          Item D\\n        </Checkbox>\\n      </CheckboxGroup>\\n    );\\n  }\\n}\",\n    mdxType: \"Example\"\n  }, (0, _react2.mdx)(CheckboxGroupControlled, {\n    mdxType: \"CheckboxGroupControlled\"\n  })));\n}\n\n;\nMDXContent.isMDXComponent = true;\n\n//# sourceURL=webpack:///./src/components/Checkbox/docs/Checkbox.mdx?");

/***/ })

}]);