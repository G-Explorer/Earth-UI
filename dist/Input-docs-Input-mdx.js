(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["Input-docs-Input-mdx"],{

/***/ "./node_modules/@mdx-js/react/dist/esm.js":
/*!************************************************!*\
  !*** ./node_modules/@mdx-js/react/dist/esm.js ***!
  \************************************************/
/*! exports provided: MDXContext, MDXProvider, mdx, useMDXComponents, withMDXComponents */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDXContext\", function() { return MDXContext; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDXProvider\", function() { return MDXProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mdx\", function() { return createElement; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"useMDXComponents\", function() { return useMDXComponents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withMDXComponents\", function() { return withMDXComponents; });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0___default.a.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = react__WEBPACK_IMPORTED_MODULE_0___default.a.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, createElementArgArray);\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, args);\n}\n\n\n\n\n//# sourceURL=webpack:///./node_modules/@mdx-js/react/dist/esm.js?");

/***/ }),

/***/ "./src/components/Input/docs/Input.mdx":
/*!*********************************************!*\
  !*** ./src/components/Input/docs/Input.mdx ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ \"./node_modules/@babel/runtime/helpers/interopRequireWildcard.js\");\n\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nexports.__esModule = true;\nexports[\"default\"] = MDXContent;\nexports.col = exports.propsTables = exports.InputClearable = exports.InputSize = exports.InputIcon = exports.InputRD = exports.InputNormal = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutPropertiesLoose */ \"./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js\"));\n\nvar _extends2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ \"./node_modules/@babel/runtime/helpers/extends.js\"));\n\nvar _react = _interopRequireWildcard(__webpack_require__(/*! react */ \"react\"));\n\nvar _react2 = __webpack_require__(/*! @mdx-js/react */ \"./node_modules/@mdx-js/react/dist/esm.js\");\n\nvar _ui = __webpack_require__(/*! @webapp-suite/ui */ \"./src/components/index.tsx\");\n\nvar _Example = _interopRequireDefault(__webpack_require__(/*! widgets/Example */ \"./site/widgets/Example/index.js\"));\n\nvar _PropsTable = _interopRequireDefault(__webpack_require__(/*! widgets/PropsTable */ \"./site/widgets/PropsTable/index.js\"));\n\nvar _Markdown = _interopRequireDefault(__webpack_require__(/*! widgets/Markdown */ \"./site/widgets/Markdown/index.js\"));\n\n/* @jsx mdx */\nvar InputNormal = function InputNormal() {\n  var _useState = (0, _react.useState)(''),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var handleChange = function handleChange(e) {\n    setValue(e.target.value);\n  };\n\n  return (0, _react2.mdx)(\"div\", null, (0, _react2.mdx)(_ui.Input, {\n    value: value,\n    onChange: handleChange,\n    placeholder: \"Please input text here\",\n    width: 456,\n    mdxType: \"Input\"\n  }), (0, _react2.mdx)(\"br\", null), (0, _react2.mdx)(_ui.Row, {\n    mdxType: \"Row\"\n  }, (0, _react2.mdx)(_ui.Col, {\n    col: \"md-14\",\n    mdxType: \"Col\"\n  }, (0, _react2.mdx)(_ui.Input, {\n    value: value,\n    onChange: handleChange,\n    placeholder: \"Please input text here\",\n    mdxType: \"Input\"\n  }))));\n};\n\nexports.InputNormal = InputNormal;\n\nvar InputRD = function InputRD() {\n  return (0, _react2.mdx)(\"div\", null, (0, _react2.mdx)(_ui.Input, {\n    value: \"Readonly text\",\n    width: 456,\n    readonly: true,\n    mdxType: \"Input\"\n  }), (0, _react2.mdx)(\"br\", null), (0, _react2.mdx)(_ui.Input, {\n    value: \"Disabled Text\",\n    width: 456,\n    disabled: true,\n    mdxType: \"Input\"\n  }));\n};\n\nexports.InputRD = InputRD;\n\nvar InputIcon = function InputIcon() {\n  var _useState2 = (0, _react.useState)(''),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var handleChange = function handleChange(e) {\n    setValue(e.target.value);\n  };\n\n  return (0, _react2.mdx)(\"div\", null, (0, _react2.mdx)(_ui.Input, {\n    prefix: (0, _react2.mdx)(_ui.Icon, {\n      type: \"search\",\n      mdxType: \"Icon\"\n    }),\n    value: value,\n    onChange: handleChange,\n    placeholder: \"Please input text\",\n    width: 456,\n    mdxType: \"Input\"\n  }), (0, _react2.mdx)(\"br\", null), (0, _react2.mdx)(_ui.Input, {\n    suffix: (0, _react2.mdx)(_ui.Tooltip, {\n      direction: \"up\",\n      title: \"this is hint\",\n      mdxType: \"Tooltip\"\n    }, (0, _react2.mdx)(_ui.Icon, {\n      type: \"question\",\n      mdxType: \"Icon\"\n    })),\n    value: value,\n    onChange: handleChange,\n    placeholder: \"Please input text\",\n    width: 456,\n    mdxType: \"Input\"\n  }));\n};\n\nexports.InputIcon = InputIcon;\n\nvar InputSize = function InputSize() {\n  var _useState3 = (0, _react.useState)(''),\n      value = _useState3[0],\n      setValue = _useState3[1];\n\n  var handleChange = function handleChange(e) {\n    setValue(e.target.value);\n  };\n\n  return (0, _react2.mdx)(\"div\", null, (0, _react2.mdx)(_ui.Input, {\n    size: \"sm\",\n    value: value,\n    onChange: handleChange,\n    suffix: (0, _react2.mdx)(_ui.Icon, {\n      type: \"calendar\",\n      mdxType: \"Icon\"\n    }),\n    placeholder: \"Small\",\n    width: 456,\n    mdxType: \"Input\"\n  }), (0, _react2.mdx)(\"br\", null), (0, _react2.mdx)(_ui.Input, {\n    size: \"md\",\n    value: value,\n    onChange: handleChange,\n    suffix: (0, _react2.mdx)(_ui.Icon, {\n      type: \"calendar\",\n      mdxType: \"Icon\"\n    }),\n    placeholder: \"Medium(default)\",\n    width: 456,\n    mdxType: \"Input\"\n  }), (0, _react2.mdx)(\"br\", null), (0, _react2.mdx)(_ui.Input, {\n    size: \"lg\",\n    value: value,\n    onChange: handleChange,\n    suffix: (0, _react2.mdx)(_ui.Icon, {\n      type: \"calendar\",\n      mdxType: \"Icon\"\n    }),\n    placeholder: \"Large\",\n    width: 456,\n    mdxType: \"Input\"\n  }));\n};\n\nexports.InputSize = InputSize;\n\nvar InputClearable = function InputClearable() {\n  var _useState4 = (0, _react.useState)(''),\n      value = _useState4[0],\n      setValue = _useState4[1];\n\n  var handleChange = function handleChange(e) {\n    setValue(e.target.value);\n  };\n\n  var handleClear = function handleClear() {\n    setValue('');\n  };\n\n  return (0, _react2.mdx)(_ui.Input, {\n    onClear: handleClear,\n    value: value,\n    onChange: handleChange,\n    placeholder: \"Please input text\",\n    width: 456,\n    mdxType: \"Input\"\n  });\n};\n\nexports.InputClearable = InputClearable;\nvar propsTables = [{\n  \"name\": \"Input\",\n  \"props\": [{\n    \"name\": \"value\",\n    \"type\": \"string | number\",\n    \"required\": false,\n    \"description\": \"<p>binding value</p>\\n\"\n  }, {\n    \"name\": \"onChange\",\n    \"type\": \"func\",\n    \"required\": false,\n    \"description\": \"<p>riggers when the icon inside Input value change</p>\\n\"\n  }, {\n    \"name\": \"type\",\n    \"type\": \"string\",\n    \"required\": false,\n    \"description\": \"<p>type of input, support <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types\\\">native input types</a></p>\\n\",\n    \"default\": \"'text'\"\n  }, {\n    \"name\": \"size\",\n    \"type\": \"'sm' | 'md' | 'lg'\",\n    \"required\": false,\n    \"description\": \"<p>size of Input</p>\\n\",\n    \"default\": \"'md'\"\n  }, {\n    \"name\": \"width\",\n    \"type\": \"number | string\",\n    \"required\": false,\n    \"description\": \"<p>the length of input, unit as px</p>\\n\",\n    \"default\": \"'100%'\"\n  }, {\n    \"name\": \"disabled\",\n    \"type\": \"bool\",\n    \"required\": false,\n    \"description\": \"<p>whether Input is disabled</p>\\n\"\n  }, {\n    \"name\": \"readonly\",\n    \"type\": \"bool\",\n    \"required\": false,\n    \"description\": \"<p>whether Input is readonly</p>\\n\"\n  }, {\n    \"name\": \"placeholder\",\n    \"type\": \"string\",\n    \"required\": false,\n    \"description\": \"<p>same as native input placeholder</p>\\n\"\n  }, {\n    \"name\": \"prefix\",\n    \"type\": \"element\",\n    \"required\": false,\n    \"description\": \"<p>the prefix icon for the Input</p>\\n\"\n  }, {\n    \"name\": \"suffix\",\n    \"type\": \"element\",\n    \"required\": false,\n    \"description\": \"<p>the suffix icon for the Input</p>\\n\"\n  }, {\n    \"name\": \"onClear\",\n    \"type\": \"func\",\n    \"required\": false,\n    \"description\": \"<p>triggers when the Input is cleared by clicking the clear button</p>\\n\"\n  }]\n}];\nexports.propsTables = propsTables;\nvar col = 16;\nexports.col = col;\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return (0, _react2.mdx)(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  InputNormal: InputNormal,\n  InputRD: InputRD,\n  InputIcon: InputIcon,\n  InputSize: InputSize,\n  InputClearable: InputClearable,\n  propsTables: propsTables,\n  col: col\n};\n\nvar MDXLayout = function MDXLayout(_ref) {\n  var props = (0, _extends2[\"default\"])({}, _ref);\n  return (0, _react2.mdx)(\"div\", null, (0, _react2.mdx)(_ui.Row, null, (0, _react2.mdx)(_ui.Col, {\n    col: \"md-16\"\n  }, (0, _react2.mdx)(\"div\", {\n    className: \"markdown\"\n  }, props.children))), propsTables.length > 0 && (0, _react2.mdx)(_ui.Row, null, (0, _react2.mdx)(_ui.Col, {\n    col: \"md-16\"\n  }, propsTables.map(function (pt) {\n    return (0, _react2.mdx)(_PropsTable[\"default\"], (0, _extends2[\"default\"])({\n      key: pt.name\n    }, pt));\n  }))));\n};\n\nfunction MDXContent(_ref2) {\n  var components = _ref2.components,\n      props = (0, _objectWithoutPropertiesLoose2[\"default\"])(_ref2, [\"components\"]);\n  return (0, _react2.mdx)(MDXLayout, (0, _extends2[\"default\"])({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), (0, _react2.mdx)(\"blockquote\", null, (0, _react2.mdx)(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Input is a controlled component and \", (0, _react2.mdx)(\"strong\", {\n    parentName: \"p\"\n  }, \"does not support\"), \" \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"defaultValue\"), \" which is uncontrolled, it \", (0, _react2.mdx)(\"strong\", {\n    parentName: \"p\"\n  }, \"always shows React binding value\"), \". Under normal circumstances, input \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"onChange\"), \" should be handled. Its handler should update component's binding value. Otherwise, input box's value will not change.\")), (0, _react2.mdx)(\"h2\", null, \"Basic usage\"), (0, _react2.mdx)(\"p\", null, \"The Input default width is \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"100%\"), \", you can use \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"with\"), \" property to customize input (px) or use the layout components: \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Row\"), \", \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Col\"), \".\"), (0, _react2.mdx)(_Example[\"default\"], {\n    renderModel: \"tabs\",\n    code: \"import { Input } from '@webapp-suite/ui'\\nimport { Row, Col } from '@webapp-suite/ui'\\nimport { useState } from 'react'\\n\\nconst InputNormal = () => {\\n  const [value, setValue] = useState('')\\n  const handleChange = e => {\\n    setValue(e.target.value)\\n  }\\n  return (\\n    <div>\\n      <Input value={value} onChange={handleChange} placeholder=\\\"Please input text here\\\" width={456} />\\n      <br/>\\n      <Row>\\n        <Col col=\\\"md-14\\\">\\n          <Input value={value} onChange={handleChange} placeholder=\\\"Please input text here\\\" />\\n        </Col>\\n      </Row>\\n    </div>\\n  )\\n}\",\n    mdxType: \"Example\"\n  }, (0, _react2.mdx)(InputNormal, {\n    mdxType: \"InputNormal\"\n  })), (0, _react2.mdx)(\"h2\", null, \"Readonly / Disabled\"), (0, _react2.mdx)(\"p\", null, \"Disable the Input with the \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"disabled\"), \" attribute, but you can also choose \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"readonly\"), \" style for a better experience.\"), (0, _react2.mdx)(_Example[\"default\"], {\n    renderModel: \"tabs\",\n    code: \"import { Input } from '@webapp-suite/ui'\\n\\nconst InputRD = () => {\\n  return (\\n    <div>\\n      <Input value=\\\"Readonly text\\\" width={456} readonly />\\n      <br/>\\n      <Input value=\\\"Disabled Text\\\" width={456} disabled />\\n    </div>\\n  )\\n}\",\n    mdxType: \"Example\"\n  }, (0, _react2.mdx)(InputRD, {\n    mdxType: \"InputRD\"\n  })), (0, _react2.mdx)(\"h2\", null, \"Icon\"), (0, _react2.mdx)(\"p\", null, \"To add icons in Input, you can simply use \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"prefix\"), \" and \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"suffix\"), \" render-props which can make nested components.\"), (0, _react2.mdx)(_Example[\"default\"], {\n    renderModel: \"tabs\",\n    code: \"import { Input, Icon, Tooltip } from '@webapp-suite/ui'\\nimport { useState } from 'react'\\n\\nconst InputIcon = () => {\\n  const [value, setValue] = useState('')\\n  const handleChange = e => {\\n    setValue(e.target.value)\\n  }\\n  return (\\n    <div>\\n      <Input\\n        prefix={<Icon type=\\\"search\\\"/>}\\n        value={value}\\n        onChange={handleChange}\\n        placeholder=\\\"Please input text\\\"\\n        width={456}\\n      />\\n      <br/>\\n      <Input\\n        suffix={<Tooltip direction=\\\"up\\\" title=\\\"this is hint\\\"><Icon type=\\\"question\\\" /></Tooltip>}\\n        value={value}\\n        onChange={handleChange}\\n        placeholder=\\\"Please input text\\\"\\n        width={456}\\n      />\\n    </div>\\n  )\\n}\",\n    mdxType: \"Example\"\n  }, (0, _react2.mdx)(InputIcon, {\n    mdxType: \"InputIcon\"\n  })), (0, _react2.mdx)(\"h2\", null, \"Size\"), (0, _react2.mdx)(\"p\", null, \"Add \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size\"), \" attribute to change the size of Input. In addition to the default \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"md\"), \" size, there are three other options: \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sm\"), \" (30px), \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"md\"), \" (35px) and \", (0, _react2.mdx)(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lg\"), \" (40px).\"), (0, _react2.mdx)(_Example[\"default\"], {\n    renderModel: \"tabs\",\n    code: \"import { Input } from '@webapp-suite/ui'\\nimport { useState } from 'react'\\n\\nconst InputSize = () => {\\n  const [value, setValue] = useState('')\\n  const handleChange = e => {\\n    setValue(e.target.value)\\n  }\\n  return (\\n    <div>\\n      <Input size=\\\"sm\\\" value={value} onChange={handleChange} suffix={<Icon type=\\\"calendar\\\"/>} placeholder=\\\"Small\\\" width={456} />\\n      <br/>\\n      <Input size=\\\"md\\\" value={value} onChange={handleChange} suffix={<Icon type=\\\"calendar\\\"/>} placeholder=\\\"Medium(default)\\\" width={456} />\\n      <br/>\\n      <Input size=\\\"lg\\\" value={value} onChange={handleChange} suffix={<Icon type=\\\"calendar\\\"/>} placeholder=\\\"Large\\\" width={456} />\\n    </div>\\n  )\\n}\",\n    mdxType: \"Example\"\n  }, (0, _react2.mdx)(InputSize, {\n    mdxType: \"InputSize\"\n  })), (0, _react2.mdx)(\"h2\", null, \"Clear\"), (0, _react2.mdx)(\"p\", null, \"Triggers when the Input is cleared by clicking the clear button\"), (0, _react2.mdx)(_Example[\"default\"], {\n    renderModel: \"tabs\",\n    code: \"import { Input } from '@webapp-suite/ui'\\nimport { useState } from 'react'\\n\\nconst InputClearable = () => {\\n  const [value, setValue] = useState('')\\n  const handleChange = e => {\\n    setValue(e.target.value)\\n  }\\n  const handleClear = () => {\\n    setValue('')\\n  }\\n  return (\\n    <Input\\n      onClear={handleClear}\\n      value={value}\\n      onChange={handleChange}\\n      placeholder=\\\"Please input text\\\"\\n      width={456}\\n    />\\n  )\\n}\",\n    mdxType: \"Example\"\n  }, (0, _react2.mdx)(InputClearable, {\n    mdxType: \"InputClearable\"\n  })));\n}\n\n;\nMDXContent.isMDXComponent = true;\n\n//# sourceURL=webpack:///./src/components/Input/docs/Input.mdx?");

/***/ })

}]);