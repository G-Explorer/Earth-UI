/**
 * @title 基本用法
 * @desc 通过 `isLoading` 的值来控制加载效果的显示与隐藏。
 * @note 该组件会保证加载效果的显示时间至少为 `300ms`，以避免一闪而过的糟糕体验。
 */
import Spinner from 'earth-ui/lib/Spinner'
import Switch from 'earth-ui/lib/Switch'
import styled, { keyframes } from 'styled-components'

class SpinnerBasic extends React.Component {
  state = { loading: false }
  toggle = value => {
    this.setState({ loading: value });
  }
  render() {
    const Border = styled.div`
      height: 120px;
      line-height: 118px;
      color: #aaa;
      text-align: center;
      border: 1px dashed #ccc;
    `
    const border = {
      height: '120px',
      lineHeight: '118px',
      color: '#aaa',
      textAlign: 'center',
      border: '1px dashed #ccc'
    }
    return (
      <div>
        <div style={{ marginBottom: 16 }}>
          打开 Spinner：<Switch on={this.state.loading} onChange={this.toggle} />
        </div>
        <div style={border}>
          <Spinner isLoading={this.state.loading}>
            将被加载效果覆盖
          </Spinner>
        </div>
      </div>
    )
  }
}

/**
 * @title 自定义描述文案
 * @desc 通过 `tip` 属性来自定义描述文案。
 */
import Spinner from 'earth-ui/lib/Spinner'
import Switch from 'earth-ui/lib/Switch'
import styled, { keyframes } from 'styled-components'

class SpinnerTip extends React.Component {
  state = { loading: false }
  toggle = value => {
    this.setState({ loading: value });
  }
  render() {
    const Border = styled.div`
      height: 120px;
      line-height: 118px;
      color: #aaa;
      text-align: center;
      border: 1px dashed #ccc;
    `
    return (
      <div>
        <div style={{ marginBottom: 16 }}>
          打开 Spinner：<Switch on={this.state.loading} onChange={this.toggle} />
        </div>
        <Border>
          <Spinner tip="Loading..." isLoading={this.state.loading}>
            自定义描述文案加载效果
          </Spinner>
        </Border>
      </div>
    )
  }
}

/**
 * @title 黑白背景
 * @desc 当前提供了 `cover` 属性以选择加载背景效果的表现。
 * @note 默认的 `cover` 是白色背景遮罩。
 */
import Spinner from 'earth-ui/lib/Spinner'
import Switch from 'earth-ui/lib/Switch'
import styled, { keyframes } from 'styled-components'

class SpinnerCover extends React.Component {
  state = { loading: false }
  toggle = value => {
    this.setState({ loading: value });
  }
  render() {
    const Border = styled.div`
      height: 120px;
      line-height: 118px;
      color: #aaa;
      text-align: center;
      border: 1px dashed #ccc;
    `
    const border = {
      height: '120px',
      lineHeight: '118px',
      color: '#aaa',
      textAlign: 'center',
      border: '1px dashed #ccc'
    }
    return (
      <div>
        <div style={{ marginBottom: 16 }}>
          打开 Spinner：<Switch on={this.state.loading} onChange={this.toggle} />
        </div>
        <div style={border}>
          <Spinner tip="Loading..." isLoading={this.state.loading}>
            白色背景遮罩的加载效果
          </Spinner>
        </div>
        <br />
        <div style={border}>
          <Spinner tip="Loading..." cover="black" isLoading={this.state.loading}>
            黑色背景遮罩的加载效果
          </Spinner>
        </div>
      </div>
    )
  }
}

/**
 * @title 各种大小
 * @desc 提供了 `sm` / `default` / `lg` 三种尺寸来满足不同场景下的需求。
 * @note 对于全局和 Aside 里面的 Spinner 建议使用 `lg` 尺寸，在高度相对高的场景下会有较好的视觉体验。
 */
import Spinner from 'earth-ui/lib/Spinner'

const SpinnerSize = () => {
  return (
    <div>
      <Spinner size="sm" />
      <Spinner />
      <Spinner size="lg" />
    </div>
  )
}

/**
 * @title 自定义指示器
 * @desc 可以通过 `indicator` 属性使用自定义指示器，需要传入一个组件实例。
 */
import Spinner from 'earth-ui/lib/Spinner'
import styled, { keyframes } from 'styled-components'

class SpinnerIndicator extends React.Component {
  state = { loading: false }
  toggle = value => {
    this.setState({ loading: value });
  }
  render() {
    const spinnerKeyFrames = keyframes`
      from {
        transform: translate3d(0, 0, 0) rotate(0deg);
      }
      to {
        transform: translate3d(0, 0, 0) rotate(360deg);
      }
    `
    const Indicator = styled.div`
      position: relative;
      width: 60px;
      height: 60px;
      border: 3px solid #00aeff
      border-radius: 50%;
      border-bottom-color: transparent;
      animation: 1s ease-in-out infinite ${spinnerKeyFrames};
    `
    const Border = styled.div`
      height: 120px;
      line-height: 118px;
      color: #aaa;
      text-align: center;
      border: 1px dashed #ccc;
    `
    return (
      <div>
        <div style={{ marginBottom: 16 }}>
          打开 Spinner：<Switch on={this.state.loading} onChange={this.toggle} />
        </div>
        <Border>
          <Spinner isLoading={this.state.loading} indicator={<Indicator />}>
            自定义指示器
          </Spinner>
        </Border>
      </div>
    )
  }
}

@component Spinner
