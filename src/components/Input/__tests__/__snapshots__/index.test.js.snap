// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input basic usage should change value when input other value 1`] = `
<Input
  onChange={[Function]}
  size="md"
  type="text"
  value="222"
  width="100%"
>
  <input
    className="true-input true-input--md"
    onChange={[Function]}
    style={
      Object {
        "width": "100%",
      }
    }
    type="text"
    value="222"
  />
</Input>
`;

exports[`Input basic usage should set empty string if value is undefined, null 1`] = `
<Input
  size="md"
  type="text"
  value={null}
  width="100%"
>
  <input
    className="true-input true-input--md"
    onChange={[Function]}
    style={
      Object {
        "width": "100%",
      }
    }
    type="text"
    value=""
  />
</Input>
`;

exports[`Input basic usage should set empty string if value is undefined, null 2`] = `
<Input
  size="md"
  type="text"
  width="100%"
>
  <input
    className="true-input true-input--md"
    onChange={[Function]}
    style={
      Object {
        "width": "100%",
      }
    }
    type="text"
    value=""
  />
</Input>
`;

exports[`Input basic usage should set width to 100% as default 1`] = `
<Input
  size="md"
  type="text"
  value="111"
  width="100%"
>
  <input
    className="true-input true-input--md"
    onChange={[Function]}
    style={
      Object {
        "width": "100%",
      }
    }
    type="text"
    value="111"
  />
</Input>
`;

exports[`Input basic usage should support specific px width 1`] = `
<Input
  size="md"
  type="text"
  width={456}
>
  <input
    className="true-input true-input--md"
    onChange={[Function]}
    style={
      Object {
        "width": 456,
      }
    }
    type="text"
    value=""
  />
</Input>
`;

exports[`Input clear should clear value correctly when click clear icon 1`] = `
<Input
  onClear={[Function]}
  size="md"
  type="text"
  value=""
  width="100%"
>
  <div
    className="true-input__affix-wrapper"
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <input
      className="true-input true-input--md true-input--suffix"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      style={
        Object {
          "width": "100%",
        }
      }
      type="text"
      value=""
    />
  </div>
</Input>
`;

exports[`Input clear should hide icon correctly when input blur 1`] = `
<Input
  onClear={[MockFunction]}
  size="md"
  type="text"
  value="111"
  width="100%"
>
  <div
    className="true-input__affix-wrapper"
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <input
      className="true-input true-input--md true-input--suffix"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      style={
        Object {
          "width": "100%",
        }
      }
      type="text"
      value="111"
    />
  </div>
</Input>
`;

exports[`Input clear should hide icon when input have not focus and mouseenter 1`] = `
<Input
  onClear={[MockFunction]}
  size="md"
  type="text"
  value="111"
  width="100%"
>
  <div
    className="true-input__affix-wrapper"
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <input
      className="true-input true-input--md true-input--suffix"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      style={
        Object {
          "width": "100%",
        }
      }
      type="text"
      value="111"
    />
  </div>
</Input>
`;

exports[`Input clear should not show icon if value is undefined, null or empty string 1`] = `
<Input
  onClear={[MockFunction]}
  size="md"
  type="text"
  value={null}
  width="100%"
>
  <div
    className="true-input__affix-wrapper"
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <input
      className="true-input true-input--md true-input--suffix"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      style={
        Object {
          "width": "100%",
        }
      }
      type="text"
      value=""
    />
  </div>
</Input>
`;

exports[`Input clear should not show icon if value is undefined, null or empty string 2`] = `
<Input
  onClear={[MockFunction]}
  size="md"
  type="text"
  width="100%"
>
  <div
    className="true-input__affix-wrapper"
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <input
      className="true-input true-input--md true-input--suffix"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      style={
        Object {
          "width": "100%",
        }
      }
      type="text"
      value=""
    />
  </div>
</Input>
`;

exports[`Input clear should not show icon if value is undefined, null or empty string 3`] = `
<Input
  onClear={[MockFunction]}
  size="md"
  type="text"
  value=""
  width="100%"
>
  <div
    className="true-input__affix-wrapper"
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <input
      className="true-input true-input--md true-input--suffix"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      style={
        Object {
          "width": "100%",
        }
      }
      type="text"
      value=""
    />
  </div>
</Input>
`;

exports[`Input clear should show icon correctly when input focus 1`] = `
<Input
  onClear={[MockFunction]}
  size="md"
  type="text"
  value="111"
  width="100%"
>
  <div
    className="true-input__affix-wrapper"
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <input
      className="true-input true-input--md true-input--suffix"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      style={
        Object {
          "width": "100%",
        }
      }
      type="text"
      value="111"
    />
    <span
      className="true-input__affix-wrapper--suffix"
    >
      <Icon
        onClick={[Function]}
        type="remove"
      >
        <i
          className="true-icon true-icon__remove"
          onClick={[Function]}
        />
      </Icon>
    </span>
  </div>
</Input>
`;

exports[`Input clear should show icon correctly when mouse enter Input boundary 1`] = `
<Input
  onClear={[MockFunction]}
  size="md"
  type="text"
  value="111"
  width="100%"
>
  <div
    className="true-input__affix-wrapper"
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <input
      className="true-input true-input--md true-input--suffix"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      style={
        Object {
          "width": "100%",
        }
      }
      type="text"
      value="111"
    />
    <span
      className="true-input__affix-wrapper--suffix"
    >
      <Icon
        onClick={[Function]}
        type="remove"
      >
        <i
          className="true-icon true-icon__remove"
          onClick={[Function]}
        />
      </Icon>
    </span>
  </div>
</Input>
`;

exports[`Input clear should show icon correctly when mouse leave Input boundary 1`] = `
<Input
  onClear={[MockFunction]}
  size="md"
  type="text"
  value="111"
  width="100%"
>
  <div
    className="true-input__affix-wrapper"
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <input
      className="true-input true-input--md true-input--suffix"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      style={
        Object {
          "width": "100%",
        }
      }
      type="text"
      value="111"
    />
  </div>
</Input>
`;

exports[`Input disabled should have disabled prop on native input 1`] = `
<Input
  disabled={true}
  size="md"
  type="text"
  value="111"
  width="100%"
>
  <input
    className="true-input true-input--md"
    disabled={true}
    onChange={[Function]}
    style={
      Object {
        "width": "100%",
      }
    }
    type="text"
    value="111"
  />
</Input>
`;

exports[`Input icon should show prefix icon correctly when have prefix render props 1`] = `
<Input
  prefix={
    <Icon
      type="search"
    />
  }
  size="md"
  type="text"
  value="111"
  width="100%"
>
  <div
    className="true-input__affix-wrapper"
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <span
      className="true-input__affix-wrapper--prefix"
    >
      <Icon
        type="search"
      >
        <i
          className="true-icon true-icon__search"
        />
      </Icon>
    </span>
    <input
      className="true-input true-input--md true-input--prefix"
      onChange={[Function]}
      style={
        Object {
          "width": "100%",
        }
      }
      type="text"
      value="111"
    />
  </div>
</Input>
`;

exports[`Input icon should show suffix icon correctly when have suffix render props 1`] = `
<Input
  size="md"
  suffix={
    <Tooltip
      align="middle"
      direction="up"
      title="this is hint"
      triggerMode="hover"
    >
      <Icon
        type="question"
      />
    </Tooltip>
  }
  type="text"
  value="111"
  width="100%"
>
  <div
    className="true-input__affix-wrapper"
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <input
      className="true-input true-input--md true-input--suffix"
      onChange={[Function]}
      style={
        Object {
          "width": "100%",
        }
      }
      type="text"
      value="111"
    />
    <span
      className="true-input__affix-wrapper--suffix"
    >
      <Tooltip
        align="middle"
        direction="up"
        title="this is hint"
        triggerMode="hover"
      >
        <Popover
          align="middle"
          className="true-tooltip__popover"
          content="this is hint"
          direction="up"
          triggerMode="hover"
        >
          <Icon
            className="true-popover__trigger"
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            type="question"
          >
            <i
              className="true-icon true-icon__question true-popover__trigger"
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
            />
          </Icon>
        </Popover>
      </Tooltip>
    </span>
  </div>
</Input>
`;

exports[`Input readonly should have readonly prop on native input 1`] = `
<Input
  readonly={true}
  size="md"
  type="text"
  value="111"
  width="100%"
>
  <div
    className="true-input__affix-wrapper"
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <input
      className="true-input true-input--md true-input--suffix"
      onChange={[Function]}
      readOnly={true}
      style={
        Object {
          "width": "100%",
        }
      }
      type="text"
      value="111"
    />
    <span
      className="true-input__affix-wrapper--suffix"
    >
      <Icon
        type="locked"
      >
        <i
          className="true-icon true-icon__locked"
        />
      </Icon>
    </span>
  </div>
</Input>
`;
