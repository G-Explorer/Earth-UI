@summary > Dialogs are used for `upcoming` events that require the user to choose whether to proceed, similar to the JavaScript `comfirm()` method. Various types of dialogs and custom configuration are supported while text content also supports the basic markdown syntax.

/**
 * @title Basic Usage
 */
import { dialog, notification, Button } from 'earth-ui'

class DialogBasic extends Component {
  handleClick = () => {
    dialog.confirm('Will you try?', {
      onAccept: function() {
        notification.success('Good luck');
      },
      onCancel: function() {
        notification.success('Come back later');
      }
    })
  }
  render() {
    return <Button type="primary" onClick={this.handleClick} ghost>OPEN DIALOG</Button>
  }
}

/**
 * @title Type
 * @desc There are four basic dialogs including `confirm`, `accept`, `warning` and `danger`.
 */
import { dialog, Button } from 'earth-ui'

class DialogTypes extends Component {
  handleClick = type => {
    dialog[type](`Dialog ${type} message`)
  }
  render() {
    return (
      <div>
        <Button type="primary" onClick={() => this.handleClick('confirm')} ghost>CONFIRM</Button>
        <Button type="primary" onClick={() => this.handleClick('accept')} ghost>ACCEPT</Button>
        <Button type="primary" onClick={() => this.handleClick('warning')} ghost>WARNING</Button>
        <Button type="primary" onClick={() => this.handleClick('danger')} ghost>DANGER</Button>
      </div>
    )
  }
}

/**
 * @title null
 * @renderModel run
 * @desc The `danger` type dialog can be nested in the `warning` type dialog, so that the interaction will have a sense of hierarchy from weak to strong.
 */
import { dialog, Button } from 'earth-ui'

class DialogWarning extends Component {
  handleClick = () => {
    ;dialog.warning('This will delete the thing.', 'DELETE IT ?', {
    	onAccept: function() {
    		dialog.danger(
    			'Are you absolutely sure you want to ' +
    			'*permanently* delete the whole thing?',
    			'CONFIRM'
    		)
    	}
    });
  }
  render() {
    return (
      <div>
        <Button onClick={this.handleClick} size="sm">RUN THIS CODE</Button>
      </div>
    )
  }
}

/**
 * @title Custom Text of Button
 * @renderModel run
 * @desc You can customize the button text. The second and third arguments of `string` type will correspond to the text of the `ACCEPT` and `CANCEL` buttons respectively.
 */
import { dialog, Button } from 'earth-ui'

class DialogButtonsLabel extends Component {
  handleClick = () => {
    ;dialog.confirm('Will you try?', 'JOIN NOW', 'NOT NOW');
  }
  render() {
    return <Button onClick={this.handleClick} size="sm">RUN THIS CODE</Button>
  }
}

/**
 * @title Custom Icon
 * @renderModel run
 * @desc You can change any supported [Icon](/components/Icon-all-icons), but use common icons whenever possible so that the users can quickly recognize which type of dialog is.
 */
import { dialog, Button } from 'earth-ui'

class DialogIcon extends Component {
  handleClick = () => {
    ;dialog.confirm('Proceed to Checkout?', 'CHECK OUT', {
      icon: 'cart'
    });
  }
  render() {
    return <Button onClick={this.handleClick} size="sm">RUN THIS CODE</Button>
  }
}
