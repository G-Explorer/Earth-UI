@summary > 对话框主要用于事件 **即将** 发生，需要用户进行选择是否继续操作，类似于 JavaScript `comfirm()` 方法。支持多种类型的对话框和部分自定义配置项，同时文本内容也支持最基础的 markdown 语法。

/**
 * @title 基本用法
 */
import dialog from 'earth-ui/lib/dialog'
import notification from 'earth-ui/lib/notification'
import Button from 'earth-ui/lib/Button'

class DialogBasic extends Component {
  handleClick = () => {
    dialog.confirm('Will you try?', {
      onAccept: function() {
        notification.success('Good luck');
      },
      onCancel: function() {
        notification.success('Come back later');
      }
    })
  }
  render() {
    return <Button type="secondary" onClick={this.handleClick}>Open Dialog</Button>
  }
}

/**
 * @title 对话框种类
 * @desc 按照提示的种类，共提供了 `confirm` , `accept`, `warning` 和 `danger` 这四种基础对话框。
 */
import dialog from 'earth-ui/lib/dialog'
import Button from 'earth-ui/lib/Button'

class DialogTypes extends Component {
  handleClick = type => {
    dialog[type](`Dialog ${type} message`)
  }
  render() {
    return (
      <div>
        <Button type="secondary" onClick={() => this.handleClick('confirm')}>Confirm</Button>
        <Button type="secondary" onClick={() => this.handleClick('accept')}>Accept</Button>
        <Button type="secondary" onClick={() => this.handleClick('warning')}>Warning</Button>
        <Button type="secondary" onClick={() => this.handleClick('danger')}>Danger</Button>
      </div>
    )
  }
}

/**
 * @title null
 * @renderModel run
 * @desc `danger` 类型对话框可以嵌套在 `warning` 类型对话框 `ACCEPT` 里面，让与用户的交互有由弱到强的层次感。
 */
import dialog from 'earth-ui/lib/dialog'
import Button from 'earth-ui/lib/Button'

class DialogWarning extends Component {
  handleClick = () => {
    ;dialog.warning('This will delete the thing.', 'Delete It', {
    	onAccept: function() {
    		dialog.danger(
    			'Are you absolutely sure you want to ' +
    			'*permanently* delete the whole thing?',
    			'Delete It'
    		)
    	}
    });
  }
  render() {
    return (
      <div>
        <Button type="tertiary" onClick={this.handleClick} micro>run this code</Button>
      </div>
    )
  }
}

/**
 * @title 自定义按钮文本
 * @renderModel run
 * @desc 可以自定义按钮文本，第二个和第三个 `string` 类型的参数将分别对应 `ACCEPT` 和 `CANCEL` 按钮的文本。
 */
import dialog from 'earth-ui/lib/dialog'
import Button from 'earth-ui/lib/Button'

class DialogButtonsLabel extends Component {
  handleClick = () => {
    ;dialog.confirm('Will you try?', 'Join Now', 'Not Now');
  }
  render() {
    return <Button type="tertiary" onClick={this.handleClick} micro>run this code</Button>
  }
}

/**
 * @title 自定义聚焦按钮
 * @renderModel run
 * @desc 对话框的默认的聚焦按钮为 `CANCEL`, 你也可以根据需要去切换 `ACCEPT` 或 `CANCEL` 按钮。
 * @note 在该示例中，没有指定 `CANCEL` 按钮的名称，那么 `options` (`{...}`) 作为第三个参数即可。
 */
import dialog from 'earth-ui/lib/dialog'
import Button from 'earth-ui/lib/Button'

class DialogButtonsType extends Component {
  handleClick = () => {
    ;dialog.confirm('Will you try?', 'Join Now', {
      focused: 'accept'
    });
  }
  render() {
    return <Button type="tertiary" onClick={this.handleClick} micro>run this code</Button>
  }
}

/**
 * @title 自定义Icon
 * @renderModel run
 * @desc 原则上你可以任意更换目前所支持的所有 [Icon](/components/Icon-all-icons)，但是无论何时都应该尽量用常见的图标，以便用户能快速识别对话框类型。
 */
import dialog from 'earth-ui/lib/dialog'
import Button from 'earth-ui/lib/Button'

class DialogIcon extends Component {
  handleClick = () => {
    ;dialog.confirm('Proceed to Checkout?', 'Check Out', {
      icon: 'cart',
      focused: 'accept'
    });
  }
  render() {
    return <Button type="tertiary" onClick={this.handleClick} micro>run this code</Button>
  }
}
